{"version":3,"file":"index.modern.js","sources":["../src/config.ts","../src/data-api.ts","../src/workflow-api.ts","../src/index.ts"],"sourcesContent":["import { BubbleConfig } from './types';\n\nlet globalConfig: BubbleConfig = {} as BubbleConfig;\n\nconst getConfig = (\n  obj: Record<string, unknown> = {},\n  prop: string,\n  envProp: string\n): any => {\n  return obj[prop] || process.env[envProp];\n};\n\nexport const config = {\n  set: (newConfig?: Partial<BubbleConfig>) => {\n    const domain = getConfig(newConfig as any, 'domain', 'BUBBLE_DOMAIN');\n    const apiToken = getConfig(\n      newConfig as any,\n      'apiToken',\n      'BUBBLE_API_TOKEN'\n    );\n    const isLive = ['true', 'TRUE', true].includes(\n      getConfig(newConfig as any, 'isLive', 'BUBBLE_LIVE')\n    );\n    if (!domain) {\n      throw new Error(\n        'You must provide a domain as an option (domain) or set a BUBBLE_DOMAIN environment variable'\n      );\n    }\n    if (!apiToken) {\n      throw new Error(\n        'You must provide an API Token as an option (apiToken) or set a BUBBLE_API_TOKEN environment variable'\n      );\n    }\n    globalConfig = {\n      domain,\n      apiToken,\n      isLive,\n    };\n  },\n  get: (): BubbleConfig => {\n    return globalConfig;\n  },\n  getDefaultHeaders(): Record<string, string> {\n    return {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${globalConfig.apiToken}`,\n    };\n  },\n  getBaseUrl(): string {\n    return `https://${globalConfig.domain}/${\n      globalConfig.isLive ? '' : 'version-test'\n    }/api/1.1/`;\n  },\n};\n\nexport default config;\n","import fetch, { Response } from 'node-fetch';\nimport omit from 'lodash.omit';\nimport {\n  BaseDataAttributes,\n  GetResponse,\n  SearchQuery,\n  PaginatedResponse,\n  FindResponse,\n  CreateResponse,\n} from './types';\nimport config from './config';\n\nconst handleError = (error: Error) => {\n  console.error(error);\n  throw error;\n};\n\nconst handleFetchResponse = async (response: Response) => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error(errorText);\n    throw errorText;\n  }\n  return response;\n};\n\nfunction buildSearchQuery<T>(query?: SearchQuery<T>): string {\n  if (!query) {\n    return '';\n  }\n  const queryString = [];\n  if (query?.constraints) {\n    queryString.push(\n      `constraints=${encodeURIComponent(JSON.stringify(query.constraints))}`\n    );\n  }\n  if (query?.limit) {\n    queryString.push(`limit=${query.limit}`);\n  }\n  if (query?.cursor) {\n    queryString.push(`cursor=${query.cursor}`);\n  }\n  if (query?.sort_field) {\n    queryString.push(`sort_field=${query.sort_field}`);\n  }\n  if (query?.descending) {\n    queryString.push(`descending=${query.descending}`);\n  }\n  if (query?.additional_sort_fields) {\n    queryString.push(\n      `additional_sort_fields=${encodeURIComponent(\n        JSON.stringify(query.additional_sort_fields)\n      )}`\n    );\n  }\n  return queryString.length === 0 ? '' : `?${queryString.join('&')}`;\n}\n\nconst sanitizeData = (data: any) => {\n  return omit(data, [\n    '_id',\n    'Slug',\n    'Created By',\n    'Created Date',\n    'Modified Date',\n    '_type',\n  ]);\n};\n\nexport default abstract class DataAPI implements BaseDataAttributes {\n  'Created Date'!: string;\n  'Created By'!: string;\n  'Modified Date'!: string;\n  'Slug'?: string;\n  _id!: string;\n\n  abstract _type: string;\n\n  constructor(args: Record<string, unknown>) {\n    Object.assign(this, args);\n  }\n\n  private get baseUrl(): string {\n    return `${config.getBaseUrl()}/obj/${this._type}`;\n  }\n\n  static async find<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    query?: SearchQuery<T>\n  ): Promise<PaginatedResponse<T>> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}${buildSearchQuery<T>(query)}`, {\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as FindResponse<T>;\n    return {\n      ...responseData.response,\n      results: responseData.response.results.map(\n        (data: T) => new this(data as Record<string, unknown>)\n      ),\n    };\n  }\n\n  static async get<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    id: string\n  ): Promise<T> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}/${id}`, {\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as GetResponse<T>;\n    return new this(responseData.response as Record<string, unknown>);\n  }\n\n  static async create<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    data: CustomDataAttributes<T>\n  ): Promise<T> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}`, {\n      method: 'POST',\n      body: JSON.stringify(sanitizeData(data)),\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as CreateResponse;\n    return new this({ _id: responseData.id }).refresh();\n  }\n\n  static async bulkCreate<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    data: CustomDataAttributes<T>[]\n  ): Promise<T[]> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}/bulk`, {\n      method: 'POST',\n      body: `${data.map((d) => JSON.stringify(sanitizeData(d))).join('\\n')}`,\n      headers: {\n        ...config.getDefaultHeaders(),\n        'Content-Type': 'text/plain',\n      },\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = await response.text();\n    const results: CreateResponse[] = JSON.parse(\n      `[${responseData.replace(/\\n/g, ',')}]`\n    );\n    const records = await Promise.all(\n      results.map((r) => new this({ _id: r.id }).refresh())\n    );\n    return records;\n  }\n\n  async refresh(): Promise<this> {\n    const { baseUrl } = this;\n    if (!this._id) {\n      throw new Error('Cannot call refresh on an object with no _id');\n    }\n    const response = await fetch(`${baseUrl}/${this._id}`, {\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as GetResponse<this>;\n    Object.assign(this, responseData.response);\n    return this;\n  }\n\n  async save(): Promise<this> {\n    const { _id, baseUrl } = this;\n    const isNew = !_id;\n    const method = isNew ? 'POST' : 'PATCH';\n    const response = await fetch(`${baseUrl}${isNew ? '' : '/' + _id}`, {\n      method,\n      body: JSON.stringify(sanitizeData(this)),\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    if (isNew) {\n      const responseData = (await response.json()) as CreateResponse;\n      this._id = responseData.id;\n    }\n    return this.refresh();\n  }\n\n  async delete(): Promise<boolean> {\n    const { _id, baseUrl } = this;\n    if (!_id) {\n      throw new Error('Cannot call delete on an object with no _id');\n    }\n    const response = await fetch(`${baseUrl}/${_id}`, {\n      method: 'DELETE',\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    return response ? response.ok : false;\n  }\n}\n\nexport type CustomDataClass<T extends DataAPI> = new (\n  args: Record<string, unknown>\n) => T;\n\nexport type CustomDataAttributes<T extends DataAPI> = Omit<T, keyof DataAPI>;\n","import fetch, { Response } from 'node-fetch';\nimport qs from 'qs';\nimport omit from 'lodash.omit';\nimport {\n  BaseDataAttributes,\n  GetResponse,\n  SearchQuery,\n  PaginatedResponse,\n  FindResponse,\n  CreateResponse,\n  WorkflowAPIErrorResponse,\n  WorkflowAPIResponse,\n  WorkflowAPIOptions\n} from './types';\nimport config from './config';\n\nconst handleError = (error: Error) => {\n  console.error(error);\n  throw error;\n};\n\nconst handleFetchResponse = async (response: Response) => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error(errorText);\n    throw errorText;\n  }\n  return response;\n};\n\nfunction buildRequestQuery(querystring?: Record<string, unknown>): string {\n  if (!querystring) {\n    return '';\n  }\n  return qs.stringify(querystring, { addQueryPrefix: true });\n}\n\nexport default class WorkflowAPI {\n  _name: string;\n\n  constructor(options: WorkflowAPIOptions) {\n    this._name = options.name;\n  }\n\n  private get baseUrl(): string {\n    return `${config.getBaseUrl()}/wf/${this._name}`;\n  }\n\n  async send(\n    data: Record<string, unknown>,\n    querystring?: Record<string, unknown>\n  ): Promise<WorkflowAPIResponse> {\n    const { baseUrl } = this;\n    const response = await fetch(`${baseUrl}${buildRequestQuery(querystring)}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    return response.json();\n  }\n}\n","import config from './config';\nimport DataAPI from './data-api';\nimport WorkflowAPI from './workflow-api';\nimport { BubbleConfig } from './types';\n\nconst BubbleIO = {\n  init: (initialConfig?: Partial<BubbleConfig>) => {\n    config.set(initialConfig);\n  },\n  DataAPI,\n  WorkflowAPI,\n};\n\nexport default BubbleIO;\n"],"names":["globalConfig","getConfig","obj","prop","envProp","process","env","config","set","newConfig","domain","apiToken","isLive","includes","Error","get","getDefaultHeaders","Authorization","getBaseUrl","handleError","error","console","handleFetchResponse","response","ok","errorText","text","buildSearchQuery","query","queryString","constraints","push","encodeURIComponent","JSON","stringify","limit","cursor","sort_field","descending","additional_sort_fields","length","join","sanitizeData","data","omit","DataAPI","constructor","args","_id","Object","assign","baseUrl","_type","find","fetch","headers","then","catch","responseData","json","results","map","id","create","method","body","refresh","bulkCreate","d","parse","replace","records","Promise","all","r","save","isNew","delete","buildRequestQuery","querystring","qs","addQueryPrefix","WorkflowAPI","options","_name","name","send","BubbleIO","init","initialConfig"],"mappings":"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"}