{"version":3,"file":"index.umd.js","sources":["../src/config.ts","../src/data-api.ts","../src/workflow-api.ts","../src/index.ts"],"sourcesContent":["import { BubbleConfig } from './types';\n\nlet globalConfig: BubbleConfig = {} as BubbleConfig;\n\nconst getConfig = (\n  obj: Record<string, unknown> = {},\n  prop: string,\n  envProp: string\n): any => {\n  return obj[prop] || process.env[envProp];\n};\n\nexport const config = {\n  set: (newConfig?: Partial<BubbleConfig>) => {\n    const domain = getConfig(newConfig as any, 'domain', 'BUBBLE_DOMAIN');\n    const apiToken = getConfig(\n      newConfig as any,\n      'apiToken',\n      'BUBBLE_API_TOKEN'\n    );\n    const isLive = ['true', 'TRUE', true].includes(\n      getConfig(newConfig as any, 'isLive', 'BUBBLE_LIVE')\n    );\n    if (!domain) {\n      throw new Error(\n        'You must provide a domain as an option (domain) or set a BUBBLE_DOMAIN environment variable'\n      );\n    }\n    if (!apiToken) {\n      throw new Error(\n        'You must provide an API Token as an option (apiToken) or set a BUBBLE_API_TOKEN environment variable'\n      );\n    }\n    globalConfig = {\n      domain,\n      apiToken,\n      isLive,\n    };\n  },\n  get: (): BubbleConfig => {\n    return globalConfig;\n  },\n  getDefaultHeaders(): Record<string, string> {\n    return {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${globalConfig.apiToken}`,\n    };\n  },\n  getBaseUrl(): string {\n    return `https://${globalConfig.domain}/${\n      globalConfig.isLive ? '' : 'version-test'\n    }/api/1.1/`;\n  },\n};\n\nexport default config;\n","import fetch, { Response } from 'node-fetch';\nimport omit from 'lodash.omit';\nimport {\n  BaseDataAttributes,\n  GetResponse,\n  SearchQuery,\n  PaginatedResponse,\n  FindResponse,\n  CreateResponse,\n} from './types';\nimport config from './config';\n\nconst handleError = (error: Error) => {\n  console.error(error);\n  throw error;\n};\n\nconst handleFetchResponse = async (response: Response) => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error(errorText);\n    throw errorText;\n  }\n  return response;\n};\n\nfunction buildSearchQuery<T>(query?: SearchQuery<T>): string {\n  if (!query) {\n    return '';\n  }\n  const queryString = [];\n  if (query?.constraints) {\n    queryString.push(\n      `constraints=${encodeURIComponent(JSON.stringify(query.constraints))}`\n    );\n  }\n  if (query?.limit) {\n    queryString.push(`limit=${query.limit}`);\n  }\n  if (query?.cursor) {\n    queryString.push(`cursor=${query.cursor}`);\n  }\n  if (query?.sort_field) {\n    queryString.push(`sort_field=${query.sort_field}`);\n  }\n  if (query?.descending) {\n    queryString.push(`descending=${query.descending}`);\n  }\n  if (query?.additional_sort_fields) {\n    queryString.push(\n      `additional_sort_fields=${encodeURIComponent(\n        JSON.stringify(query.additional_sort_fields)\n      )}`\n    );\n  }\n  return queryString.length === 0 ? '' : `?${queryString.join('&')}`;\n}\n\nconst sanitizeData = (data: any) => {\n  return omit(data, [\n    '_id',\n    'Slug',\n    'Created By',\n    'Created Date',\n    'Modified Date',\n    '_type',\n  ]);\n};\n\nexport default abstract class DataAPI implements BaseDataAttributes {\n  'Created Date'!: string;\n  'Created By'!: string;\n  'Modified Date'!: string;\n  'Slug'?: string;\n  _id!: string;\n\n  abstract _type: string;\n\n  constructor(args: Record<string, unknown>) {\n    Object.assign(this, args);\n  }\n\n  private get baseUrl(): string {\n    return `${config.getBaseUrl()}/obj/${this._type}`;\n  }\n\n  static async find<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    query?: SearchQuery<T>\n  ): Promise<PaginatedResponse<T>> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}${buildSearchQuery(query)}`, {\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as FindResponse<T>;\n    return {\n      ...responseData.response,\n      results: responseData.response.results.map(\n        (data: T) => new this(data as Record<string, unknown>)\n      ),\n    };\n  }\n\n  static async get<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    id: string\n  ): Promise<T> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}/${id}`, {\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as GetResponse<T>;\n    return new this(responseData.response as Record<string, unknown>);\n  }\n\n  static async create<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    data: CustomDataAttributes<T>\n  ): Promise<T> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}`, {\n      method: 'POST',\n      body: JSON.stringify(sanitizeData(data)),\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as CreateResponse;\n    return new this({ _id: responseData.id }).refresh();\n  }\n\n  static async bulkCreate<T extends DataAPI>(\n    this: CustomDataClass<T>,\n    data: CustomDataAttributes<T>[]\n  ): Promise<T[]> {\n    const { baseUrl } = new this({});\n    const response = await fetch(`${baseUrl}/bulk`, {\n      method: 'POST',\n      body: `${data.map((d) => JSON.stringify(sanitizeData(d))).join('\\n')}`,\n      headers: {\n        ...config.getDefaultHeaders(),\n        'Content-Type': 'text/plain',\n      },\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = await response.text();\n    const results: CreateResponse[] = JSON.parse(\n      `[${responseData.replace(/\\n/g, ',')}]`\n    );\n    const records = await Promise.all(\n      results.map((r) => new this({ _id: r.id }).refresh())\n    );\n    return records;\n  }\n\n  async refresh(): Promise<this> {\n    const { baseUrl } = this;\n    if (!this._id) {\n      throw new Error('Cannot call refresh on an object with no _id');\n    }\n    const response = await fetch(`${baseUrl}/${this._id}`, {\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    const responseData = (await response.json()) as GetResponse<this>;\n    Object.assign(this, responseData.response);\n    return this;\n  }\n\n  async save(): Promise<this> {\n    const { _id, baseUrl } = this;\n    const isNew = !_id;\n    const method = isNew ? 'POST' : 'PATCH';\n    const response = await fetch(`${baseUrl}${isNew ? '' : '/' + _id}`, {\n      method,\n      body: JSON.stringify(sanitizeData(this)),\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    if (isNew) {\n      const responseData = (await response.json()) as CreateResponse;\n      this._id = responseData.id;\n    }\n    return this.refresh();\n  }\n\n  async delete(): Promise<boolean> {\n    const { _id, baseUrl } = this;\n    if (!_id) {\n      throw new Error('Cannot call delete on an object with no _id');\n    }\n    const response = await fetch(`${baseUrl}/${_id}`, {\n      method: 'DELETE',\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    return response ? response.ok : false;\n  }\n}\n\nexport type CustomDataClass<T extends DataAPI> = new (\n  args: Record<string, unknown>\n) => T;\n\nexport type CustomDataAttributes<T extends DataAPI> = Omit<T, keyof DataAPI>;\n","import fetch, { Response } from 'node-fetch';\nimport qs from 'qs';\nimport omit from 'lodash.omit';\nimport {\n  BaseDataAttributes,\n  GetResponse,\n  SearchQuery,\n  PaginatedResponse,\n  FindResponse,\n  CreateResponse,\n  WorkflowAPIErrorResponse,\n  WorkflowAPIResponse,\n  WorkflowAPIOptions\n} from './types';\nimport config from './config';\n\nconst handleError = (error: Error) => {\n  console.error(error);\n  throw error;\n};\n\nconst handleFetchResponse = async (response: Response) => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error(errorText);\n    throw errorText;\n  }\n  return response;\n};\n\nfunction buildRequestQuery(querystring?: Record<string, unknown>): string {\n  if (!querystring) {\n    return '';\n  }\n  return qs.stringify(querystring, { addQueryPrefix: true });\n}\n\nexport default class WorkflowAPI {\n  _name: string;\n\n  constructor(options: WorkflowAPIOptions) {\n    this._name = options.name;\n  }\n\n  private get baseUrl(): string {\n    return `${config.getBaseUrl()}/wf/${this._name}`;\n  }\n\n  async send(\n    data: Record<string, unknown>,\n    querystring?: Record<string, unknown>\n  ): Promise<WorkflowAPIResponse> {\n    const { baseUrl } = this;\n    const response = await fetch(`${baseUrl}${buildRequestQuery(querystring)}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: config.getDefaultHeaders(),\n    })\n      .then(handleFetchResponse)\n      .catch(handleError);\n    return response.json();\n  }\n}\n","import config from './config';\nimport DataAPI from './data-api';\nimport WorkflowAPI from './workflow-api';\nimport { BubbleConfig } from './types';\n\nconst BubbleIO = {\n  init: (initialConfig?: Partial<BubbleConfig>) => {\n    config.set(initialConfig);\n  },\n  DataAPI,\n  WorkflowAPI,\n};\n\nexport default BubbleIO;\n"],"names":["globalConfig","getConfig","obj","prop","envProp","process","env","config","set","newConfig","domain","apiToken","isLive","includes","Error","get","getDefaultHeaders","Authorization","getBaseUrl","handleError","error","console","handleFetchResponse","response","ok","errorText","text","buildSearchQuery","query","queryString","constraints","push","encodeURIComponent","JSON","stringify","limit","cursor","sort_field","descending","additional_sort_fields","length","join","sanitizeData","data","omit","DataAPI","constructor","args","_id","Object","assign","baseUrl","_type","find","fetch","headers","then","catch","responseData","json","results","map","id","create","method","body","refresh","bulkCreate","d","parse","replace","records","Promise","all","r","save","isNew","delete","buildRequestQuery","querystring","qs","addQueryPrefix","WorkflowAPI","options","_name","name","send","BubbleIO","init","initialConfig"],"mappings":";;;;;;;;;;;EAEA,IAAIA,YAAY,GAAiB,EAAjC;;EAEA,MAAMC,SAAS,GAAG,CAChBC,MAA+B,EADf,EAEhBC,IAFgB,EAGhBC,OAHgB;EAKhB,SAAOF,GAAG,CAACC,IAAD,CAAH,IAAaE,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAApB;EACD,CAND;;EAQO,MAAMG,MAAM,GAAG;EACpBC,EAAAA,GAAG,EAAGC,SAAD;EACH,UAAMC,MAAM,GAAGT,SAAS,CAACQ,SAAD,EAAmB,QAAnB,EAA6B,eAA7B,CAAxB;EACA,UAAME,QAAQ,GAAGV,SAAS,CACxBQ,SADwB,EAExB,UAFwB,EAGxB,kBAHwB,CAA1B;EAKA,UAAMG,MAAM,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,EAAuBC,QAAvB,CACbZ,SAAS,CAACQ,SAAD,EAAmB,QAAnB,EAA6B,aAA7B,CADI,CAAf;;EAGA,QAAI,CAACC,MAAL,EAAa;EACX,YAAM,IAAII,KAAJ,CACJ,6FADI,CAAN;EAGD;;EACD,QAAI,CAACH,QAAL,EAAe;EACb,YAAM,IAAIG,KAAJ,CACJ,sGADI,CAAN;EAGD;;EACDd,IAAAA,YAAY,GAAG;EACbU,MAAAA,MADa;EAEbC,MAAAA,QAFa;EAGbC,MAAAA;EAHa,KAAf;EAKD,GA1BmB;EA2BpBG,EAAAA,GAAG,EAAE;EACH,WAAOf,YAAP;EACD,GA7BmB;;EA8BpBgB,EAAAA,iBAAiB;EACf,WAAO;EACL,sBAAgB,kBADX;EAELC,MAAAA,aAAa,YAAYjB,YAAY,CAACW;EAFjC,KAAP;EAID,GAnCmB;;EAoCpBO,EAAAA,UAAU;EACR,sBAAkBlB,YAAY,CAACU,UAC7BV,YAAY,CAACY,MAAb,GAAsB,EAAtB,GAA2B,yBAD7B;EAGD;;EAxCmB,CAAf;;;;;;;;;;;;;;;;;;;;ECAP,MAAMO,aAAW,GAAIC,KAAD;EAClBC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,QAAMA,KAAN;EACD,CAHD;;EAKA,MAAME,qBAAmB,GAAG,MAAOC,QAAP;EAC1B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;EAChB,UAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;EACAL,IAAAA,OAAO,CAACD,KAAR,CAAcK,SAAd;EACA,UAAMA,SAAN;EACD;;EACD,SAAOF,QAAP;EACD,CAPD;;EASA,SAASI,gBAAT,CAA6BC,KAA7B;EACE,MAAI,CAACA,KAAL,EAAY;EACV,WAAO,EAAP;EACD;;EACD,QAAMC,WAAW,GAAG,EAApB;;EACA,MAAID,KAAJ,YAAIA,KAAK,CAAEE,WAAX,EAAwB;EACtBD,IAAAA,WAAW,CAACE,IAAZ,gBACiBC,kBAAkB,CAACC,IAAI,CAACC,SAAL,CAAeN,KAAK,CAACE,WAArB,CAAD,GADnC;EAGD;;EACD,MAAIF,KAAJ,YAAIA,KAAK,CAAEO,KAAX,EAAkB;EAChBN,IAAAA,WAAW,CAACE,IAAZ,UAA0BH,KAAK,CAACO,OAAhC;EACD;;EACD,MAAIP,KAAJ,YAAIA,KAAK,CAAEQ,MAAX,EAAmB;EACjBP,IAAAA,WAAW,CAACE,IAAZ,WAA2BH,KAAK,CAACQ,QAAjC;EACD;;EACD,MAAIR,KAAJ,YAAIA,KAAK,CAAES,UAAX,EAAuB;EACrBR,IAAAA,WAAW,CAACE,IAAZ,eAA+BH,KAAK,CAACS,YAArC;EACD;;EACD,MAAIT,KAAJ,YAAIA,KAAK,CAAEU,UAAX,EAAuB;EACrBT,IAAAA,WAAW,CAACE,IAAZ,eAA+BH,KAAK,CAACU,YAArC;EACD;;EACD,MAAIV,KAAJ,YAAIA,KAAK,CAAEW,sBAAX,EAAmC;EACjCV,IAAAA,WAAW,CAACE,IAAZ,2BAC4BC,kBAAkB,CAC1CC,IAAI,CAACC,SAAL,CAAeN,KAAK,CAACW,sBAArB,CAD0C,GAD9C;EAKD;;EACD,SAAOV,WAAW,CAACW,MAAZ,KAAuB,CAAvB,GAA2B,EAA3B,OAAoCX,WAAW,CAACY,IAAZ,CAAiB,GAAjB,GAA3C;EACD;;EAED,MAAMC,YAAY,GAAIC,IAAD;EACnB,SAAOC,wBAAI,CAACD,IAAD,EAAO,CAChB,KADgB,EAEhB,MAFgB,EAGhB,YAHgB,EAIhB,cAJgB,EAKhB,eALgB,EAMhB,OANgB,CAAP,CAAX;EAQD,CATD;;QAW8BE;EAS5BC,EAAAA,YAAYC;WARZ;WACA;WACA;WACA;WACAC;EAKEC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBH,IAApB;EACD;;EAEkB,MAAPI,OAAO;EACjB,cAAU5C,MAAM,CAACW,UAAP,UAA2B,KAAKkC,OAA1C;EACD;;EAEgB,eAAJC,IAAI,CAEfzB,KAFe;EAIf,UAAM;EAAEuB,MAAAA;EAAF,QAAc,IAAI,IAAJ,CAAS,EAAT,CAApB;EACA,UAAM5B,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,UAAUxB,gBAAgB,CAACC,KAAD,GAA9B,EAAyC;EACnE2B,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EAD0D,KAAzC,CAAL,CAGpBwC,IAHoB,CAGflC,qBAHe,EAIpBmC,KAJoB,CAIdtC,aAJc,CAAvB;EAKA,UAAMuC,YAAY,GAAI,MAAMnC,QAAQ,CAACoC,IAAT,EAA5B;EACA,wBACKD,YAAY,CAACnC,QADlB;EAEEqC,MAAAA,OAAO,EAAEF,YAAY,CAACnC,QAAb,CAAsBqC,OAAtB,CAA8BC,GAA9B,CACNlB,IAAD,IAAa,IAAI,IAAJ,CAASA,IAAT,CADN;EAFX;EAMD;;EAEe,eAAH5B,GAAG,CAEd+C,EAFc;EAId,UAAM;EAAEX,MAAAA;EAAF,QAAc,IAAI,IAAJ,CAAS,EAAT,CAApB;EACA,UAAM5B,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,WAAWW,IAAf,EAAqB;EAC/CP,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EADsC,KAArB,CAAL,CAGpBwC,IAHoB,CAGflC,qBAHe,EAIpBmC,KAJoB,CAIdtC,aAJc,CAAvB;EAKA,UAAMuC,YAAY,GAAI,MAAMnC,QAAQ,CAACoC,IAAT,EAA5B;EACA,WAAO,IAAI,IAAJ,CAASD,YAAY,CAACnC,QAAtB,CAAP;EACD;;EAEkB,eAANwC,MAAM,CAEjBpB,IAFiB;EAIjB,UAAM;EAAEQ,MAAAA;EAAF,QAAc,IAAI,IAAJ,CAAS,EAAT,CAApB;EACA,UAAM5B,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,SAAJ,EAAe;EACzCa,MAAAA,MAAM,EAAE,MADiC;EAEzCC,MAAAA,IAAI,EAAEhC,IAAI,CAACC,SAAL,CAAeQ,YAAY,CAACC,IAAD,CAA3B,CAFmC;EAGzCY,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EAHgC,KAAf,CAAL,CAKpBwC,IALoB,CAKflC,qBALe,EAMpBmC,KANoB,CAMdtC,aANc,CAAvB;EAOA,UAAMuC,YAAY,GAAI,MAAMnC,QAAQ,CAACoC,IAAT,EAA5B;EACA,WAAO,IAAI,IAAJ,CAAS;EAAEX,MAAAA,GAAG,EAAEU,YAAY,CAACI;EAApB,KAAT,EAAmCI,OAAnC,EAAP;EACD;;EAEsB,eAAVC,UAAU,CAErBxB,IAFqB;EAIrB,UAAM;EAAEQ,MAAAA;EAAF,QAAc,IAAI,IAAJ,CAAS,EAAT,CAApB;EACA,UAAM5B,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,cAAJ,EAAoB;EAC9Ca,MAAAA,MAAM,EAAE,MADsC;EAE9CC,MAAAA,IAAI,KAAKtB,IAAI,CAACkB,GAAL,CAAUO,CAAD,IAAOnC,IAAI,CAACC,SAAL,CAAeQ,YAAY,CAAC0B,CAAD,CAA3B,CAAhB,EAAiD3B,IAAjD,CAAsD,IAAtD,GAFqC;EAG9Cc,MAAAA,OAAO,eACFhD,MAAM,CAACS,iBAAP,EADE;EAEL,wBAAgB;EAFX;EAHuC,KAApB,CAAL,CAQpBwC,IARoB,CAQflC,qBARe,EASpBmC,KAToB,CASdtC,aATc,CAAvB;EAUA,UAAMuC,YAAY,GAAG,MAAMnC,QAAQ,CAACG,IAAT,EAA3B;EACA,UAAMkC,OAAO,GAAqB3B,IAAI,CAACoC,KAAL,KAC5BX,YAAY,CAACY,OAAb,CAAqB,KAArB,EAA4B,GAA5B,IAD4B,CAAlC;EAGA,UAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CACpBb,OAAO,CAACC,GAAR,CAAaa,CAAD,IAAO,IAAI,IAAJ,CAAS;EAAE1B,MAAAA,GAAG,EAAE0B,CAAC,CAACZ;EAAT,KAAT,EAAwBI,OAAxB,EAAnB,CADoB,CAAtB;EAGA,WAAOK,OAAP;EACD;;EAEY,QAAPL,OAAO;EACX,UAAM;EAAEf,MAAAA;EAAF,QAAc,IAApB;;EACA,QAAI,CAAC,KAAKH,GAAV,EAAe;EACb,YAAM,IAAIlC,KAAJ,CAAU,8CAAV,CAAN;EACD;;EACD,UAAMS,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,WAAW,KAAKH,KAApB,EAA2B;EACrDO,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EAD4C,KAA3B,CAAL,CAGpBwC,IAHoB,CAGflC,qBAHe,EAIpBmC,KAJoB,CAIdtC,aAJc,CAAvB;EAKA,UAAMuC,YAAY,GAAI,MAAMnC,QAAQ,CAACoC,IAAT,EAA5B;EACAV,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBQ,YAAY,CAACnC,QAAjC;EACA,WAAO,IAAP;EACD;;EAES,QAAJoD,IAAI;EACR,UAAM;EAAE3B,MAAAA,GAAF;EAAOG,MAAAA;EAAP,QAAmB,IAAzB;EACA,UAAMyB,KAAK,GAAG,CAAC5B,GAAf;EACA,UAAMgB,MAAM,GAAGY,KAAK,GAAG,MAAH,GAAY,OAAhC;EACA,UAAMrD,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,UAAUyB,KAAK,GAAG,EAAH,GAAQ,MAAM5B,KAAjC,EAAwC;EAClEgB,MAAAA,MADkE;EAElEC,MAAAA,IAAI,EAAEhC,IAAI,CAACC,SAAL,CAAeQ,YAAY,CAAC,IAAD,CAA3B,CAF4D;EAGlEa,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EAHyD,KAAxC,CAAL,CAKpBwC,IALoB,CAKflC,qBALe,EAMpBmC,KANoB,CAMdtC,aANc,CAAvB;;EAOA,QAAIyD,KAAJ,EAAW;EACT,YAAMlB,YAAY,GAAI,MAAMnC,QAAQ,CAACoC,IAAT,EAA5B;EACA,WAAKX,GAAL,GAAWU,YAAY,CAACI,EAAxB;EACD;;EACD,WAAO,KAAKI,OAAL,EAAP;EACD;;EAEW,QAANW,MAAM;EACV,UAAM;EAAE7B,MAAAA,GAAF;EAAOG,MAAAA;EAAP,QAAmB,IAAzB;;EACA,QAAI,CAACH,GAAL,EAAU;EACR,YAAM,IAAIlC,KAAJ,CAAU,6CAAV,CAAN;EACD;;EACD,UAAMS,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,WAAWH,KAAf,EAAsB;EAChDgB,MAAAA,MAAM,EAAE,QADwC;EAEhDT,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EAFuC,KAAtB,CAAL,CAIpBwC,IAJoB,CAIflC,qBAJe,EAKpBmC,KALoB,CAKdtC,aALc,CAAvB;EAMA,WAAOI,QAAQ,GAAGA,QAAQ,CAACC,EAAZ,GAAiB,KAAhC;EACD;;;;EC7LH,MAAML,WAAW,GAAIC,KAAD;EAClBC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;EACA,QAAMA,KAAN;EACD,CAHD;;EAKA,MAAME,mBAAmB,GAAG,MAAOC,QAAP;EAC1B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;EAChB,UAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;EACAL,IAAAA,OAAO,CAACD,KAAR,CAAcK,SAAd;EACA,UAAMA,SAAN;EACD;;EACD,SAAOF,QAAP;EACD,CAPD;;EASA,SAASuD,iBAAT,CAA2BC,WAA3B;EACE,MAAI,CAACA,WAAL,EAAkB;EAChB,WAAO,EAAP;EACD;;EACD,SAAOC,sBAAE,CAAC9C,SAAH,CAAa6C,WAAb,EAA0B;EAAEE,IAAAA,cAAc,EAAE;EAAlB,GAA1B,CAAP;EACD;;QAEoBC;EAGnBpC,EAAAA,YAAYqC;WAFZC;EAGE,SAAKA,KAAL,GAAaD,OAAO,CAACE,IAArB;EACD;;EAEkB,MAAPlC,OAAO;EACjB,cAAU5C,MAAM,CAACW,UAAP,SAA0B,KAAKkE,OAAzC;EACD;;EAES,QAAJE,IAAI,CACR3C,IADQ,EAERoC,WAFQ;EAIR,UAAM;EAAE5B,MAAAA;EAAF,QAAc,IAApB;EACA,UAAM5B,QAAQ,GAAG,MAAM+B,yBAAK,IAAIH,UAAU2B,iBAAiB,CAACC,WAAD,GAA/B,EAAgD;EAC1Ef,MAAAA,MAAM,EAAE,MADkE;EAE1EC,MAAAA,IAAI,EAAEhC,IAAI,CAACC,SAAL,CAAeS,IAAf,CAFoE;EAG1EY,MAAAA,OAAO,EAAEhD,MAAM,CAACS,iBAAP;EAHiE,KAAhD,CAAL,CAKpBwC,IALoB,CAKflC,mBALe,EAMpBmC,KANoB,CAMdtC,WANc,CAAvB;EAOA,WAAOI,QAAQ,CAACoC,IAAT,EAAP;EACD;;;;QCxDG4B,QAAQ,GAAG;EACfC,EAAAA,IAAI,EAAGC,aAAD;EACJlF,IAAAA,MAAM,CAACC,GAAP,CAAWiF,aAAX;EACD,GAHc;EAIf5C,EAAAA,OAJe;EAKfqC,EAAAA;EALe;;;;;;;;"}